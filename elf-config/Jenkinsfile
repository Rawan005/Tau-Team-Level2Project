pipeline {
      agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: kubectl
    image: bryandollery/terraform-packer-aws-alpine
    command:
    - cat
    tty: true
  - name: helm
    image: alpine/helm
    command:
    - cat
    tty: true
"""
    }
  }
  environment {
    TOKEN=credentials('4ff0bfed-4fc0-4f54-b80e-3c0569b79790')
  }

   stages {
      stage("install") {
          steps {
                container('helm') {
                     sh '''
                  helm repo add elastic https://helm.elastic.co
                  helm repo add fluent https://fluent.github.io/helm-charts
                  helm repo update
                  helm install elasticsearch elastic/elasticsearch --version=7.9.0 --namespace=elf
                  helm install fluent-bit fluent/fluent-bit --namespace=elf
                  helm install kibana elastic/kibana --version=7.9.0 --namespace=elf --set service.type=LoadBalancer
                    '''

                 
              }
          }
      }
     stages {
      stage("Deploy") {
          steps {
              container('kubectl') {
                  sh '''
		     kubectl apply -f elf.namespace.yaml
         kubectl run random-logger --image=chentex/random-logger -n elf
         kubectl apply -f ingress.yaml -n elf
                  '''
              }
          }
      }
        
    }
}
